/*	1. 114 page
 * 		객체 => 변수(여러개의 변수/여러개의 메소드) 동시에 관리하는 영역
 * 		--- 설계 => 영역 class
 * 		--- 동시에 관리를 위해서는 저장 => new 
 * 
 * 	2. 115 page
 * 		학생 => 같은 학교인 경우
 * 		학교명 학번 이름 성별 주소 전화 . . => 변수
 * 		----  ------------------ 학생마다 따로 가지고 있는 변수 => new			
 * 		ㄴ한 개의 이름만 가지고 있음 => static
 * 		=> 명사적 => 변수
 * 		=> 동사적 => 메소드 : 점심을 먹는다, 시험본다, 게임을 한다 . . (동작)
 * 		변수 / 변수를 활용하는 메소드 => 클래스 => 관리(객체)
 * 		=> e.g.)
 * 			시계
 * 			시침 / 분침 / 초침
 * 			계산기
 * 			첫번째 정수 / 두번째 변수 / 연산자
 * 
 * 		=> 객체란 현실세계 / 비현실 세계를 특성화 시킨 것이다 면접에 나온댜 . ..
 * 									-----추상화----- 단순화
 * 
 * 		115 page
 * 		= 클래스명
 * 			변수 식별자와 동일
 * 			--------------
 *  		알파벳이나 한글
 *  		특수문자(_,$)
 *  		숫자 사용 가능
 *  		공백 사용 불가능
 *  		키워드도 사용 불가능
 *  
 *  		클래스 형태
 *  		= 데이터형 클래스
 *  		=> 변수만 설정 => 사용자 정의 데이터형 : ~VO, ~DTO, ~Bean
 *  	
 *  		= 액션 클래스 
 *  		=> 메소드 설정 => 기능만 처리 : ~DAO, ~Manager, ~Controller(요청 => 응답)
 *  		
 *  	117 ~ 118 page
 *   			
 * 		class ClassName
 * 		{
 * 			*** 멤버 변수
 * 				new => 저장 => 따로 메모리 생성 => 인스턴스변수
 * 				컴파일시 저장 => 한 개의 메모리 생성 => 정적 변수 => static
 * 
 * 			*** 초기화
 * 				인스턴스 변수 : {}, 생성자
 * 				static 변수 : static{}, 생성자 => 자동 저장이 가능 => 생성자를 이용하지 않는다
 * 
 * 			*** 변수활용 => 메소드 
 * 
 * 		}
 * 
 */
public class 클래스_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
