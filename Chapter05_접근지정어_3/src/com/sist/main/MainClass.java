package com.sist.main;
import com.sist.manager.*;
import com.sist.vo.Movie;
/*	변수
 * 	---------------------------------------------------------------------------------------------------
 * 	종류 									메모리에 저장되는 시점 			사용범위 			메모리해제 	저장위치
 * 	---------------------------------------------------------------------------------------------------
 *  인스턴스 변수							new 클래스명()					클래스 전체		프로그램 종료 	Heap
 *  class A {							=> 메모리 따로 저장				=>다른 클래스
 *  [접근지정어] 데이터형 변수명;				
 *  클래스 블록 안에 선언
 *  }
 * 	---------------------------------------------------------------------------------------------------
 * 	정적 변수(static)						컴파일 시 메모리에 저장			자신의 클래스 전체	프로그램시 해제  MethodArea
 * 	class A {							접근 방식 : 클래스명.변수명		=> 다른 클래스
 * 	[접근지정어] static 데이터형 변수명;		new 없이 저장이 가능
 * 	클래스 블록 안에서만 선언이 가능
 * 	=> 다른 클래스에서 사용이 가능
 *  }
 *  
 *  ** 모든 클래스가 공유할 수 있다(공개) => 메모리 공간이 1개만 생성
 *  
 *  자바에 사용하는 메모리
 *  ---------------------------
 *  Method Area => 메소드, static 변수
 *  ---------------------------
 *  Stack => 지역변수, 매개변수 => 메모리 자체 관리 => 메소드가 종료되면 자동으로 사라진다
 *  		 ------------- 메소드 안에서 사용이 가능
 *  ---------------------------
 *  Heap => 배열, 클래스 멤버변수 => 프로그래머가 관리
 *  ---------------------------
 *  	1. int malloc(sizeof(A)), 2. free(A)
 *  	   메모리 할당					메모리 해제
 *  	=> new						delete
 *  	=> 프로그래머가 삭제에 소홀: 프로그램 종료 시 자동으로 운영체제에서 삭제
 *  	=> 변수가 많아지면서 문제 발생 => 가비지 컬렉션(자동 메모리 회수)
 * 	---------------------------------------------------------------------------------------------------
 * 	지역 변수								메소드 호출시마다 메모리 생성		메소드 안에서만 사용 		메소드가 종료(return)	Stack
 * 	Stack => LIFO (Last In First Out)
 * 	void display() {												
 * 	데이터형 변수명;
 * 	=> 메소드 안에 선어
 * 	=> 접근지정어를 사용할 수 없다
 * 	=> static 사용할 수 없다
 * 	=> 유일하게 사용이 가능한 것 : final
 * 	=> 다른 클래스에서 사용이 불가능
 * 		=> 메소드 블록 안에서만 사용
 * 	}
 * 
 * 
 *  *** 멤버변수(static, 인스턴스변수(객체변수))
 *  	=> 자동 초기화
 *  		int a => 0
 *  		double => 0.0
 *  		String(클래스) => null
 *  
 *  	지역변수는 자동 초기화가 안 된다(초기화 후 사용)
 * 	---------------------------------------------------------------------------------------------------
 * 	* 변수
 * 		저장하는 데이터가 여러개 => 따로 메모리를 만들어서 저장 (인스턴스)
 * 		저장하는 데이터가 1개 => static
 * 		사용하고 필요가 없다 => 지역변수
 * 		
 * 
 * 		for(int i=1;i<10
 */
public class MainClass {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("====================== 영화 목록 ======================");
		// 메모리에 저장이 된 상태 => 컴파일시에 메모리에 저장 => Method Area
		// static을 이용하면 메모리 공간이 1개 생성 => 모든 클래스에 공유가 가능
		// 변경 => 모든 클래스 변경된 데이터를 사용
		for(Movie movie:MovieManager.movies) { // movies(public) => 접근이 가능 static => 클래스명으로 접근
			System.out.println(movie.getMno()+"."+movie.getTitle());
			// 값을 출력 / 값을 읽는 경우 : getXxx()
			// 값을 저장 / 값을 변경 : setXxx()
		}
	}

}
