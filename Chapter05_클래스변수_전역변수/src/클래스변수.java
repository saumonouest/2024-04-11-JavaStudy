/*	데이터를 묶어서 사용 => 1개 이름으로 여러개의 변수에 접근
 * 					  ------------------------
 * 					  배열 : 같은 데이터형 크기를 이용한다 => 고정적ㅇㅣ다
 * 					  클래스 : 다른 데이터형을 모아서 관리 => 가변적이다
 * 
 * 	자바는 클래스로 시작 클래스로 종료
 * 	-------------------------
 * 	클래스 구성요소
 * 	-----------
 * 	=> 사용은 데이터형 / 연산자 / 제어문 / 메소드
 * 			--------------------------- 필요한 경우에는 라이브러리 사용
 *	
 *	메모리 구조 
 *	------------------------------------
 *	메소드 영역
 *		1. 메소드 
 *		2. static 변수
 *	------------------------------------
 *	스택 
 *		1. 지역변수
 *		2. 매개변수 ----->{} 이 종료되면 자동으로 메모리에서 회수
 *	------------------------------------
 *	힙 
 *	프로그래머가 관리 => GC(실제 데이터가 저장되는 영역)
 *				   ------------------- 프로그램 종료 될 때까지 유지
 *		1. 배열
 *		2. 멤버변수
 *	------------------------------------
 *	
 *
 *
 *	클래스의 구성요소 
 *	------------------------------------
 * 	변수
 * 		지역변수 / 매개변수 => 메모리에 저장(메소드 호출)
 * 						  사용범위는 메소드 안에서만 사용이 가능
 * 						  지역변수 : 요청처리를 위한 변수
 * 						  매개변수 : 사용자 요청값이 있는 경우
 * 						=> 저장되는 위치 : 스택
 * 		
 * 		멤버변수 => 메모리에 저장 시점 => new를 이용할 때 따로 생성
 * 			  => 사용범위 : 클래스 전체 / 다른 클래스에서도 사용 가능
 * 
 * 		공유변수 => 메모리 저장 시점 => 컴파일시에 한 개 메모리 공유
 * 			  => 사용범위 : 클래스 전체 / 다른 클래스에서도 사용 가능
 * 
 * 		Class A{
 * 			int a;
 * 			int c;
 * 			------ 얘네는 저장 안 된 상태 
 * 			static int b; => 저장
 *		}
 *		a,c => A aa=new A(); ==> 저장되는 시점
 *		
 *		멤버변수 사용이 거의 대부분
 *		------ 지역변수 / 매개변수
 *		** 프로그램 종료시까지 메모리 유지 / 따라 저장이 되기 때문에 관리
 *			다른 데이터형 여러개를 묶어서 사용이 가능
 *		** 프로그램 : 데이터 관리
 *
 *		변수
 *		--- 초기화 
 *		멤버변수 / 공유변수 => 기본 초기화
 *		멤버변수
 *		공유변수
 *		----- 명시적인 초기화
 *		----- 자동 초기화
 *		----- 메모리에 저장 초기화
 *
 *		class A {
 *		int b; => 0 
 *		int a=100; => 명시적인 초기화
 *		static int c;
 *		static int d=100;
 *		=> 자동 초기화 (호출 없이)
 *		멤버변수 초기화 { 
 *		=> 초기화 블록
 *		a=1000
 *		}
 *
 *		공유 변수 초기화
 *		static{
 *		d=1000;
 *		}
 *
 *		() => 멤버변수 초기화
 *		static => 공유변수 초기화
 *		{
 *		}
 *
 *		class A {
 * 		int a; => 선언만 가능
 * 					이 영역에서는 구현은 불가능
 * 					제어문 / 연산처리 / 라이브러리 다 불가능
 * 		}
 *	 }
 *	 지역 변수 => 반드시 초기화
 *			
 *
 * 	------------------------------------
 * 	생성자 / 초기화
 * 	------------------------------------
 * 	메소드 : 저장된 변수 활용
 * 	---- 기능
 * 	=> 리턴형 / 매개변수 - 사용자가 요청한 값 => 웹
 * 		ㄴ 요청 처리에 대한 결과값
 * 	------------------------------------
 * 	클래스 => 재사용 목적 (부품) => 컴포넌트
 * 	ㄴ 1. 데이터 보호 (노출이 안 되게) => 캡슐화 / 은닉화 
 * 	  2. 재사용 => 상속 / 포함 : is-a / has-a
 * 	  3. 유지 보수 => 수정, 추가 : 오버라이딩, 오버로딩 => 다형성 
 * 	------------------------------------
 * 
 *	변수 => 멤버변수
 *
 */
public class 클래스변수 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
