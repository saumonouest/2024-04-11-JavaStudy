/*
 * 변수 : 한 개의 데이터를 저장하는 메모리 공간의 이름 - 필요시 변경 가능
 * 메모리 공간 => 4byte씩 나눠진다.
 * 
 * 
 * 0----------
 * 	  사용중
 * 4----------
 * 	  사용중
 * 8----------
 * 	   10  ----- 별칭 a < 이게 변수
 * 12---------
 * 
 * 16---------
 * 
 * 
 * 1. 변수 명칭법
 *		1) 알파벳이나 한글로 시작한다. *알파벳 사용 시 대소문자 구분 필요
 *		2) 숫자 사용 가능 *앞에는 사용 불가 (e.g. a1, a2 . . .)
 *		3) 특수문자 사용 가능 (_ , $) => (e.g. 단어가 2개 => file_name   *_name : 임시변수)
 *		4) 키워드는 사용할 수 없다. => 자바에서 이미 사용중인 단어(예약어)
 *		5) 공백 불가능
 *		6) 변수명에 제한이 없음 *보통 3~10글자, 압축 필요
 * 		---------------------------------------------------------------------------
 * 		kor = 89 :
 *  	 |	  |
 * 		변수 - 실제 저장된 값(메모리) => 리터럴
 * 		 ㄴ다음에 다시 사용한다 
 * 
 * 		변수의 형식)
 * 			데이터형 변수명 = 값 
 * 		-----------------------------------
 * 			  | 메모리 크기
 * 
 * 			데이터형(30page)
 * 		   --------
 * 			정수 
 * 			1byte => byte => 파일 읽기 / 업로드 / 다운로드 / 네트워크 전송
 * 				  => -128 ~ 127까지만 사용이 가능 = 범위를 벗어나서 오류 발생
 * 
 * 			2byte => short => 사용빈도는 거의 없다(c언어와 호환성)
 * 			----------------------------------------------------------
 * 			4byte => int => default (컴퓨터는 무조건 숫자 => int)
 * 			8byte => long => 금융권
 * 			---------------------------------------------------------- 숫자 뒤 L(l)로 구분
 * 			byte 사용 > 메모리 공간 절약, 근데 보통 속도 맞춰야 돼서 int 씀
 * 
 * 
 * 			e.g.
 * 			10(int), 10L(long)
 * 
 * 			-> 컴퓨터에 저장
 * 			  -----------0,1로만 저장
 * 			   1byte => 8bit(0,1=>8로 저장)
 * 			  ------------------------------
 * 			   부호비트 1 1 1 1 1 1 1 1 
 * 			  --------
 * 				0 => 양수
 * 				1 => 음수 
 * 			  ------------------------------
 * 			0 1 1 1 1 1 1 1 => 127 => 음수 => 2의 보수? . . . 이 뒤 못 봄 . . .
 * 
 * 			실수
 * 			4byte
 * 			8byte
 * 
 * 			문자
 * 			2byte
 * 
 * 			논리
 * 			1byte
 * 
 * 			데이터를 저장해서 재사용 => 변수(한개만 저장 가능)
 * 			<저장 방식>
 * 			1. 정수 :
 * 				byte - 1byte (-128 ~ 127)
 * 				short - 2byte (-32768 ~ 32767)
 * 				int - 4byte (-21억 4천 ~ 21억 4천) 
 * 				long - 8byte = 64bit
 * 
 * 			2. 실수 : 
 * 				float -
 * 				double -
 * 
 * 			3. 문자 : 
 * 				char -
 * 
 * 			4. 논리 : 
 * 				boolean -
 * 		---------------------------------------------------------------------------
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */
public class 변수_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		byte b1=-128; //사용 범위 혹은 메모리 크기 => 데이터형 변수~ 라고 함
		//변경 못하게 하고 싶으면 byte 앞에 final 붙여주면 됨 그럼 나중에 바꾼 값 오류 뜬다
		//데이터형 변수명 실제 저장값 순
		System.out.println(b1);
		b1=100;
		System.out.println(b1);
		long a=21000000000L;
		//int에서 long으로 바꿨으면 뒤에 L 붙이는 거 까먹으면 안 됨 까먹으면 에러 뜸~
		//근데? long을 써도 어차피 범위가 int 범위 내면 안 써도 됨~
		//왼쪽이 크거나 같아야 함(e.g. int a=21000L 이거 안 됨)
		System.out.println(a);
		
		/*	문제
		 * 국어 영어 수학 점수 총점 계산
		 */
		int kor=90; //4byte 메모리 공간 만들어서 kor 이름으로 90 저장이라는 뜻
		int eng=80;
		int math=70;
		//여기까지가 초기값
		System.out.println(kor+eng+math);
		
		/*	초기값 부여 방법 **초기값 없이 사용하면 오류
		 * 1. 명시적 초기화 
		 * 	int a=100;
		 * 
		 * 2. 난수발생 => 임의로 숫자를 추출 => 게임
		 * 
		 * 3. 사용자로부터 값을 받아서 초기화
		 *
		 */
		int total=0;
		System.out.println(total);
		System.out.println(kor+eng+math);
		
		/* 변수
		 * 1. 지역변수 : 반드시 초기화 후 사용
		 * ----------------------------
		 * 	초기화 방법(28page)
		 * 		1) 선언과 동시에 초기값 부여 - int a=10;
		 * 		2) 선언을 먼저, 나중에 값 대입 - int a; a=10;
		 * 		3) 여러개 동시에 선언 
		 * 			int a=10;
		 * 			int b=20;
		 * 			int c=30;
		 * 			long d=40; 
		 * 
		 * 			int a,b,c;  > 이런 경우에는 다 동일 해야 함(변수가? 아니면 값이?)
		 * 			a=b=c=10;
		 *			int a=10, b=10, c=10; 
		 * 
		 * 2. 멤버변수
		 * 3. 공유변수
		 * 4. 참조변수
		 * 
		 * 
		 * 
		 * 30page
		 * 논리형 - boolean = 저장하는 값 > true/false
		 * 1byte => true=1, false=0
		 * => 사용하는 위치는 조건을 사용활 때
		 * => 형식)
		 * boolean bCheck=false; 
		 * 이건 거의 로그인 할 때 많이 씀~
		 */
		boolean bCheck=false;
		System.out.println(bCheck);
		
		/* 31page
		 * 문자형
		 * =char : 멀티바이트 > 2byte > UniCode
		 * 표현방식 = 문자 1개 > ''
		 */
		
		char hakjum='B';
		System.out.println(hakjum);
		char fname='홍';
		System.out.println(fname);
		char num='0';
		System.out.println(num);
		
	
	}

}
