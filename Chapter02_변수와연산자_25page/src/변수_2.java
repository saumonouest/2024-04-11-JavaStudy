/* 1. 변수 선언(25page)
 * 	1) 변수 : 한 개의 데이터를 저장하는 메모리 공간 이름 *주소로 되어 있음 - 저장한 데이터를 읽고 쓰기 용이
 * 			> 데이터 변경이 가능 
 * 
 * 	2) 상수 : 한 개의 데이터를 저장하는 메모리 공간 이름
 * 			> 데이터 변경이 불가능
 * 			> 변수와 상수의 구분은 final로 한다 붙어있으면 상수 안 붙으면 변수
 * 			(e.g. final 데이터형 상수명 = 값 > 값을 고정한다는 뜻, 변경 불가능한)
 * 
 * 	3) 리터럴 : 실제 저장된 값(메모리)
 * 
 * 2. 변수 명칭법(26page) = 식별자(구분자) = 같은 곳에서 같은 이름의 변수는 설정 불가 당연함
 * 	e.g.
 * int a=10;
 * int a=20; 
 * > 이건 불가능함, 만약에 내가 a 값을 20으로 바꾸고 싶으면 
 * int a=10;
 * a=20; 
 * >이렇게 int 떼고 해야 됨 
 * 
 * 	1) 알파벳, 한글로 시작(대소문 구분)
 * 		e.g. int kor,eng,math,Kor < 이거 가능함 대소문자 구분돼서
 * 
 *  2) 숫자사용(시작은 불가능)
 *  	e.g. int kor1, kor2, kor3. . . 
 *  
 *  3) 키워드는 사용 불가 
 *  	e.g. int,byte,long 뭐 이런 자바에서 이미 쓰는 용어
 * 
 * 	4) 공백 불가능
 * 		e.g. int a b
 * 
 * 	5) 특수문자 사용 가능
 * 		_ , $ ==> 위치 노상관
 * 		_(언더바)가 앞에 있으면 임시변수라고 한 번 쓰고 버리는 거에 많이 씀 > 보통 정렬? 할 때 쓴다고 한다~ e.g. _temp
 * 		클래스, 변수, 상수, 메소드, 인터페이스, 추상클래스, 배열  . . . . ;
 *  
 * 3. 데이터형(타입), 기본형(27page)
 * 
 * 	형식)
 * 	 데이터타입 변수명 ;
 * 	--------- 정수, 실수, 문자, 논리
 * 	----------------------------------------------------------------------
 * 	정수형
 * 	byte => 1byte (사용하는 범위 : -128 ~ 127)
 * 			사용처 : 파일 읽기, 업로드, 다운로드, 네트워크 통신
 * 
 * 	int  => 가장 많이 사용하는 정수형 (디폴트)
 * 			사용처 : 모든 프로그램의 정수형이 필요한 경우
 * 			> 4byte (사용범위 -21억 4천 ~ 21억 4천)
 * 
 * 	long => 데이터 수집 > 라이브러리가 제작
 * 			8byte > 2^63
 * 			bit = byte => 0이나 1만 저장하는 공간, 8bit > 1byte
 * 
 *----------------------------------------------음수, 양수 표현?
 *    |음/양|    |    |    |    |    |    |    |
 *     1(음)
 *     0(양)
 *-----------------------------------------------
 * 
 * 	----------------------------------------------------------------------
 *  논리형 : boolean > true / false
 *  				조건이 있는 경우에 주로 사용
 *  				(e.g. 로그인, 검색어, 페이지. . .)
 *  
 *  	   boolean > 변수 설정
 *  				 bLogin
 *  				 bCheck. . .
 *  
 *  		1byte (0=false, 1=true)
 *  
 *  		사용법
 *  		boolean bCheck=false
 *  ----------------------------------------------------------------------
 *  	문자형 : char > 2byte (0~65535)
 *  		   문자는 양수로만 되어 있다.
 *  		  => 표현하는 문자가 많이 있다
 *  		  => Unicode : 각국의 언어를 사용할 수 있다 
 *  		  => char는 문자 한 개만 저장이 가능 > ''
 *  			 여러개 저장 > "" > char로는 불가능함 > String 사용
 *  		  => char는 저장시에 해당 번호로 변경해서 저장
 *  			 'A' > 65
 *  			 'a' > 97
 *  			 '0' > 48 ASC코드
 *  		  => 사용법
 *  			 char fname='흥';
 *  			 char alpha='A';
 *  		  => char는 연산시에 정수형으로 변경된다.
 *  			 'A'+1 > 66
 *  			 ---65
 *  			 "A"+1 > "A1"
 *  			 7+"7"+7+7 > "7777" : 문자열 결합
 *  			 7+7+"7"+7 > "1477"
 *  	
 *  	***정수 표현법
 *  		10, 20 > 10진법
 *  		010 > 8진법
 *  		0x11 > 16진법
 *  		0b10 > 2진법
 *  ----------------------------------------------------------------------
 *    	실수형 : 소수점
 *    		   float > 4byte - 소수점 6자리
 *    		  double > 8byte - 소수점 15자리
 *    				 > 실수형의 default
 *    			e.g. 10.5 = double 
 *    				 10.5F(f) = float
 *    
 *  ----------------------------------------------------------------------
 *     	참조형 : 데이터를 여러개 한번에 저장하는 방법
 *     			배열 / 클래스
 *  ----------------------------------------------------------------------   
 *     
 *     01111111
 *     1)Change
 *     	0 > 1
 *      1 > 0
 *      10000000 > 1의 보수
 *     + 	   1
 *     ---------
 *      10000001 > 2의 보수
 *      
 *      
 *      
 *      
 * 4. 각 데이터형별 사용법
 * 5. 연산처리 방법 => 제어
 */
public class 변수_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// byte 지정하지 않은 모든 숫자 => int
		System.out.println((Integer.toBinaryString(-128)));
		System.out.println(~127); //음수 확인하고 싶으면 앞에 물결
		System.out.println('A'+'B'); //char는 연산시에 무조건 정수형으로 처리
		System.out.println("A"+"B");
		System.out.println((int)'A'); //int를 넣을 때 괄호 위치 제대로 확인하기
		System.out.println((int)'a'); //바로 위에 거부터 세 개는 외우기
		System.out.println((int)'0');
		System.out.println((int)'+');
		System.out.println( 'A'+'+');
		System.out.println(0x1010); //16의 3승 + 16의 1승 
		System.out.println(16*16*16+16); //위에 거 풀어서 쓴 거임~
		
		/*
		 * float f=10.5F; 
		 * double d=10.5;
		 */
		
		}

}
